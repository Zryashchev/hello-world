package ru.geekbrains.lesson4;

import java.util.Random;
import java.util.Scanner;

public class lesson4 {
    private static Scanner scanner;
    private static Random random;
    private static char[][] map;

    private static final int SIZE = 3;   //размер игрового поля

    //Ячейки поля
    private static final char MAP_ELEMENT_EMPTY = '_';   //заполнитель для пустой ячейки
    private static final char MAP_ELEMENT_X = 'X';   //символ игрока
    private static final char MAP_ELEMENT_0 = '0';   //символ бота

    //Основной игровой цикл
    public static void main(String[] args) {
        scanner = new Scanner(System.in);
        random = new Random();

        initMap();
        printMap();

        while (true) {
            playerTurn();
            printMap();
            if (checkWin(MAP_ELEMENT_X)) {
                System.out.println("Игра окончена! Победил Игрок!");
                break;
            }
            if (isMapFull()) {
                System.out.println("Игра окончена! Ничья!");
                break;
            }
            aiTurn();
            printMap();
            if (checkWin(MAP_ELEMENT_0)) {
                System.out.println("Игра окончена! Победил AI!");
                break;
            }
            if (isMapFull()) {
                System.out.println("Игра окончена! Ничья!");
                break;
            }
        }
    }

//

    public static boolean checkWin(char element) {

//                if (map[0][0] == element && map[1][0] == element && map[2][0] == element) {
//                    return true;
//                }
//                if (map[0][1] == element && map[1][1] == element && map[2][1] == element) {
//                    return true;
//                }
//                if (map[0][2] == element && map[1][2] == element && map[2][2] == element) {
//                    return true;
//                }
//
//                if (map[0][0] == element && map[0][1] == element && map[0][2] == element) {
//                    return true;
//                }
//                if (map[1][0] == element && map[1][1] == element && map[1][2] == element) {
//                    return true;
//                }
//                if (map[2][0] == element && map[2][1] == element && map[2][2] == element) {
//                    return true;
//                }
//
//                if (map[0][0] == element && map[1][1] == element && map[2][2] == element) {
//                    return true;
//                }
//                if (map[2][0] == element && map[1][1] == element && map[0][2] == element) {
//                    return true;
//                }
//

        int countV;
        int countH;
        int countDiagonalA = 0;
        int countDiagonalB = 0;
        for (int i = 0; i <= SIZE - 1; i++) {
            countH = 0;
            countV = 0;
            for (int j = 0; j <= SIZE - 1; j++) {
                //tested horizontal check
                if (map[i][j] == element) {
                    countH++;
                    if (countH == SIZE) return true;
                }

                //tested vertical check
                if (map[j][i] == element) {
                    countV++;
                    if (countV == SIZE) return true;
                }
            }

            // tested diagonal A "\" check
            if (map[i][i] == element) {
                countDiagonalA++;
                if (countDiagonalA == SIZE) return true;
            } else countDiagonalA = 0;

            // tested diagonal B "/" check
            if (map[i][SIZE - 1 - i] == element) {
                countDiagonalB++;
                if (countDiagonalB == SIZE) return true;
            } else countDiagonalB = 0;
        }

        return false;
    }

//......
    public static boolean isMapFull() {
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                if(map[i][j] == MAP_ELEMENT_EMPTY) {
                    return false;
                }
            }
        }
        return true;
    }
//Ход бота
    public static void aiTurn() {
        int x,y;

        do {
            x = random.nextInt(SIZE);
            y = random.nextInt(SIZE);
        } while (!isMoveValid(x, y));

        map[x][y] = MAP_ELEMENT_0;
        System.out.println("AI походил в клетку [ " + (x + 1) + ", " + (y + 1) + " ]");
    }
//Ход игрока
    public static void playerTurn() {
        int x,y;

        do {
            System.out.println("Введите координаты вашего хода (X, Y)");
            x = scanner.nextInt() - 1;
            y = scanner.nextInt() - 1;
        } while (!isMoveValid(x, y));

        map[x][y] = MAP_ELEMENT_X;
    }
//Проверка ячеек
    public static boolean isMoveValid(int x, int y) {
        if(x < 0 || y < 0 || x >= SIZE || y >= SIZE) {
            return false;
        }
        if(map[x][y] != MAP_ELEMENT_EMPTY) {
            return false;
        }
        return true;
    }
//Вывод поля в консоль
    public static void printMap() {
        System.out.print("  ");
        for (int i = 1; i <= SIZE; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
        for (int i = 0; i < SIZE; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < SIZE; j++) {
                System.out.print(map[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }
//Инициализация поля
    public static void initMap() {
        map = new char[SIZE][SIZE];
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                map[i][j] = MAP_ELEMENT_EMPTY;
            }
        }
    }
}
